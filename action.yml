name: Terraform plan
description: Plan the Terraform script and (optionally) upload the resulting artifact
inputs:
  artifact-name:
    description: Name of the artifact to upload, if any
    required: false
    default: plan_output
  github-token:
    description: Token to access the GitHub APIs
    required: false
    default: ""
  comment-title:
    description: Title of the PR comment with the plan output
    required: false
    default: "Plan output"
  output-path:
    description: Path where to store the resulting output plan
    required: false
    default: output
  target:
    description: Instructs Terraform to focus its planning efforts only on resource instances which match the given address and on any objects that those instances depend on.
    required: false
  upload-artifact:
    description: Set to true to upload the resulting artifact with the TF plan
    required: false
    default: false
  validate-terraform:
    description: Set to true to validate the formatting of the TF files
    required: false
    default: true
  working-directory:
    description: Directory where to run the plan command
    required: false
    default: "."
outputs:
  has-changes:
    description: "Flag to indicate if the plan show changes or not"
    value: ${{ steps.check_changes.outputs.with_changes }}

runs:
  using: "composite"
  steps:

    - if: inputs.validate-terraform == 'true'
      name: Validate
      shell: bash
      run: terraform validate

    - name: Plan
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        export TF_VAR_created_by_ci="$CI"
        export TF_VAR_github_repo_name="$GITHUB_REPOSITORY"
        if [ -n "${{ inputs.target }}" ]; then
          ARGS='-target=${{ inputs.target }}'
        fi
        echo "Additional terraform arguments: $ARGS"
        terraform plan \
          $ARGS \
          -out ${{ inputs.output-path }}

    - name: Check for changes
      id: check_changes
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        NO_CHANGES=$(terraform show ${{ inputs.output-path }} | grep "No changes." || true)
        if [ -n "$NO_CHANGES" ]; then
          echo "Plan has no changes"
          echo "with_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Plan has changes"
          echo "with_changes=true" >> $GITHUB_OUTPUT
        fi

    - if: inputs.upload-artifact == 'true'
      uses: actions/upload-artifact@v3.1.1
      with:
        name: ${{ inputs.artifact-name }}
        if-no-files-found: error
        path: ${{ inputs.working-directory }}/${{ inputs.output-path }}
