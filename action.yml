name: Terraform plan
description: Plan the Terraform script and (optionally) upload the resulting artifact
inputs:
  artifact-name:
    description: Name of the artifact to upload, if any
    required: false
    default: plan_output
  comment-pr:
    description: If true it will add a comment to the related PR (if any) with the plan output
    required: false
    default: false
  github-token:
    description: Token to access the GitHub APIs
    required: false
    default: ""
  comment-title:
    description: Title of the PR comment with the plan output
    required: false
    default: "Plan output"
  output-path:
    description: Path where to store the resulting output plan
    required: false
    default: output
  upload-artifact:
    description: Set to true to upload the resulting artifact with the TF plan
    required: false
    default: false
  validate-terraform:
    description: Set to true to validate the formatting of the TF files
    required: false
    default: true
  working-directory:
    description: Directory where to run the plan command
    required: false
    default: "."
outputs:
  has-changes:
    description: "Flag to indicate if the plan show changes or not"
    value: ${{ steps.check_changes.outputs.with_changes }}

runs:
  using: "composite"
  steps:

    - if: inputs.validate-terraform == 'true'
      name: Validate
      shell: bash
      run: terraform validate

    - name: Plan
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        export TF_VAR_created_by_ci="$CI"
        export TF_VAR_github_repo_name="$GITHUB_REPOSITORY"
        terraform plan \
          -out ${{ inputs.output-path }}

    - if: inputs.comment-pr == 'true' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')
      name: Set plan output
      id: plan_output
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      env:
        DELIMITER: "─────────────────────────────────────────────────────────────────────────────"
      run: |
        TF_OUTPUT=$(terraform show -no-color ${{ inputs.output-path }})
        TF_OUTPUT=${TF_OUTPUT#*${DELIMITER}}
        DATA=$(printf "\`\`\`\n%s\n\`\`\`" "$TF_OUTPUT" | jq -R --slurp ".")
        echo "::set-output name=plan::${DATA}"

    - if: inputs.comment-pr == 'true' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target')
      name: Comment PR
      uses: SadaPay/action-comment-pr@49784c1bf0a8ba9f21bf808d1afe50c674a2e8bd
      with:
        title: ${{ inputs.comment-title }}
        body: ${{ steps.plan_output.outputs.plan }}
        github-token: ${{ inputs.github-token }}

    - name: Check for changes
      id: check_changes
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        NO_CHANGES=$(terraform show ${{ inputs.output-path }} | grep "No changes." || true)
        if [ -n "$NO_CHANGES" ]; then
          echo "Plan has no changes"
          echo "::set-output name=with_changes::false"
        else
          echo "Plan has changes"
          echo "::set-output name=with_changes::true"
        fi

    - if: inputs.upload-artifact == 'true'
      uses: actions/upload-artifact@v2.3.1
      with:
        name: ${{ inputs.artifact-name }}
        if-no-files-found: error
        path: ${{ inputs.working-directory }}/${{ inputs.output-path }}
